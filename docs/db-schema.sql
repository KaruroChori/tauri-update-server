BEGIN TRANSACTION;
DROP TABLE IF EXISTS "channels";
CREATE TABLE IF NOT EXISTS "channels" (
	"id"	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	"label"	TEXT NOT NULL UNIQUE
);
DROP TABLE IF EXISTS "releases";
CREATE TABLE IF NOT EXISTS "releases" (
	"id"	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	"arch"	INTEGER NOT NULL,
	"version"	INTEGER NOT NULL,
	"notes"	TEXT,
	"channel"	INTEGER NOT NULL,
	"path"	TEXT NOT NULL,
	"date"	DATE,
	"signature"	TEXT,
	"enabled"	BOOLEAN NOT NULL DEFAULT 0,
	FOREIGN KEY("channel") REFERENCES "channels"("id") ON DELETE CASCADE,
	FOREIGN KEY("arch") REFERENCES "archs"("id") ON DELETE CASCADE
);
DROP TABLE IF EXISTS "archs";
CREATE TABLE IF NOT EXISTS "archs" (
	"id"	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	"label"	TEXT NOT NULL UNIQUE
);
DROP TABLE IF EXISTS "events";
CREATE TABLE IF NOT EXISTS "events" (
	"id"	INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
	"licence"	INTEGER NOT NULL,
	"release"	INTEGER NOT NULL,
	"date"	TIMESTAMP NOT NULL,
	"initial"	INTEGER NOT NULL,
	"token"	TEXT NOT NULL UNIQUE,
	"used"	BOOLEAN NOT NULL DEFAULT 0,
	FOREIGN KEY("release") REFERENCES "releases"("id") ON DELETE CASCADE,
	FOREIGN KEY("licence") REFERENCES "licences"("id") ON DELETE CASCADE
);
DROP TABLE IF EXISTS "licences";
CREATE TABLE IF NOT EXISTS "licences" (
	"id"	INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE,
	"secret"	TEXT NOT NULL UNIQUE,
	"enabled"	BOOLEAN NOT NULL DEFAULT 0
);
DROP TABLE IF EXISTS "subscriptions";
CREATE TABLE IF NOT EXISTS "subscriptions" (
	"licence"	INTEGER NOT NULL,
	"channel"	INTEGER NOT NULL,
	FOREIGN KEY("licence") REFERENCES "licences"("id") ON DELETE CASCADE
);
DROP INDEX IF EXISTS "unique_release";
CREATE UNIQUE INDEX IF NOT EXISTS "unique_release" ON "releases" (
	"arch"	ASC,
	"version"	ASC,
	"channel"	ASC
);
COMMIT;
